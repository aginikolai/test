# import Product, ProductWhereInput, ProductOrderByInput from "./generated/prisma.graphql"
scalar Upload

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  me: User
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product]!
}

type Mutation {
  refreshToken: String!
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): LoginResponse!
  createProduct(name: String!, price: Float!, picture: Upload!): Product!
  createDraft(title: String!, content: String!): Post!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
}

type Subscription {
  feedSubscription: Post
}

type Error {
  field: String!
  msg: String!
}

type LoginResponse {
  payload: AuthPayload
  error: Error
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  published: Boolean!
  title: String!
  content: String!
  author: User!
}
